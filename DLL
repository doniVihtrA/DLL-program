#include<stdio.h>
#include<stdlib.h>
#include<string.h>

int count=0;

struct node
{
  struct node *prev;
  int ssn, phno;
  float sal;
  char name[20], dept[20], desg[20];
  struct node *next;
 } *first=NULL, *temp=NULL, *last=NULL;


 void create()
 {
   int ssn, phno;
   float sal;
   char name[20],dept[10],desg[20];

   temp=(struct node *)malloc(sizeof(struct node));

   temp->prev=NULL;
   temp->next=NULL;

   printf("\nEnter ssn, name, department, designation, salary and phone number of the employee:");
   scanf("%d %s %s %s %f %d", &ssn, name, dept, desg, &sal, &phno);
   temp->ssn=ssn;
   strcpy(temp->name, name);
   strcpy(temp->dept, dept);
   strcpy(temp->desg, desg);
   temp->sal=sal;
   temp->phno=phno;
   count++;
  }

 void display()
 {
  temp = first;

  if (temp==NULL)
  {
    printf(" List is empty\n");
    return;
   }

   printf("\nThe link list elements from the beginning are:");

   while(temp!= NULL)
   {
     printf("%d\n %s\n %s\n %s\n %f\n %d\n", temp->ssn, temp->name,
temp->dept,temp->desg, temp->sal, temp->phno);
     temp=temp->next;
    }

    printf("The number of employees is : %d", count);
  }

 void insert_front()
 {
  if (first==NULL)
  {
   create();
   first=temp;
   last=first;
  }
  else
  {
    create();
    temp->next=first;
    first->prev=temp;
    first =temp;
  }
 }

 void delete_front()
 {
  struct node *cur=first;

  if(first==NULL)
  {
   printf("List is empty\n");
   return;
  }

  if(first->next==NULL)
  {
   printf("%d\n %s\n %s\n %s\n %f\n %d\n", first->ssn, first->name,
first->dept,first->desg, first->sal, first->phno);

   free(first);
   first=NULL;
   last=NULL;

  }
  else
  {
   first=first->next;
    printf("%d\n %s\n %s\n %s\n %f\n %d\n", cur->ssn, cur->name,
cur->dept, cur->desg, cur->sal, cur->phno);
    free(cur);
   }
  count --;
 }

 void insert_rear()
 {
  if (first==NULL)
  {
    create();
    first =temp;
    last=first;
   }
  else
  {
   create();
   last->next=temp;
   temp->prev=last;
   last=temp;
  }
 }

 void delete_rear()
 {
  if(first==NULL)
  {
   printf("List is empty");
   return;
   }

  if(first->next==NULL)
  {

    printf("%d\n %s\n %s\n %s\n %f\n %d\n", first->ssn, first->name,first->dept, first->desg, first->sal, first->phno);
    free(first);
    first=NULL;
    last=NULL;
   }

   else
   {
    temp=last->prev;
    temp->next=NULL;
    printf("%d\n %s\n %s\n %s\n %f\n %d\n",last->ssn, last->name,last->dept, last->desg, last->sal, last->phno);
    free(last);
    last=temp;
    }
  count--;
 }

 void main()
 {
   int ch, n, i;
   first =NULL;
   temp=last=NULL;

   printf("\t\tMENU\n1.To create a new DLL of n employees\n2.Display from the beginning\n3.To insert from front end\n4.To delete from front end\n5.To insert from rear end\n6.To delete from rear end\n7.To exit");

   while(1)
   {
     printf("\nEnter your choice:");
     scanf("%d",&ch);

     switch(ch)
     {
       case 1: printf("\nEnter the number of employees:");
               scanf("%d",&n);
               for(i=0;i<n;i++)
                 insert_rear();
               break;
       case 2: display();
               break;
       case 3: insert_front();
               break;
       case 4: delete_front();
               break;
       case 5: insert_rear();
               break;
       case 6: delete_rear();
               break;
       case 7: printf("\nExiting...");
               exit(0);
       default: printf("\nInvalid option");
      }
    }
  }
